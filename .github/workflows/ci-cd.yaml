name: CI/CD
on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install
        run: npm ci
      - name: Lint
        run: npm run lint:check
      - name: Formatting
        run: npm run fmt:check
      - name: Test
        run: npm run test:cov
      - name: Report coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm run start
      - name: Capture screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: cypress/screenshots
      - name: Capture videos
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: videos
          path: cypress/videos

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: public

  releaseDev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs:
    - build
    - test
    - e2e
    steps:
    - uses: actions/checkout@v1
    - name: Download Build
      uses: actions/download-artifact@v1
      with:
        name: build
        path: build
    - name: Upload Build to S3
      run: |
        aws s3 cp --recursive build s3://pi-base-viewer-dev
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
